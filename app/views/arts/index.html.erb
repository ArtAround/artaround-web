<% content_for :tabs do %>
  <li id="allArt_link" class="map active">
    <%= link_to "Map", map_path %>
  </li>
  <!-- only used on map page, to keep current search value even if the user idly changes what's in the field without hitting the form -->
  <input id="mapsearch_value" type="hidden" value="" />
<% end %>

<div id="artListContainer">
<div id="filter-options">
	<ul id="sort-by">
		<li><a href="#created_at" class="current">Recent</a></li>
		<li><a href="#visits" >Popular</a></li>
	</ul>
	<div id="filters">
		<select>
		  <option value="*">show all</a></option>
		  <option value=".architecture">Architecture</a></option>
		  <option value=".digital">Digital</a></option>
		  <option value=".drawing">Drawing</a></option>
		  <option value=".gallery">Gallery</a></option>
		  <option value=".graffiti">Graffiti</a></option>
		  <option value=".installation">Installation</a></option>
		  <option value=".interactive">Interactive</a></option>
		  <option value=".kinetic">Kinetic</a></option>
		  <option value==".lighting">Lighting Installation</a></option>
		  <option value=".market">Market</a></option>
		  <option value=".memorial">Memorial</a></option>
		  <option value=".mixed">Mixed</a></option>
		  <option value=".mosaic">Mosaic</a></option>
		  <option value=".mural">Mural</a></option>
		  <option value=".museum">Museum</a></option>
		  <option value=".painting">Painting</a></option>
		  <option value=".performance">Performance</a></option>
		  <option value=".paste">Paste</a></option>
		  <option value=".photograph">Photograph</a></option>
		  <option value=".print">Print</a></option>
		  <option value=".projection">Projection</a></option>
		  <option value=".sculpture">Sculpture</a></option>
		  <option value=".statue">Statue</a></option>
		  <option value=".stained">Stained Glass</a></option>
		  <option value=".temporary">Temporary</a></option>
		  <option value=".textile">Textile</a></option>
		  <option value=".video">Video</a></option>
		</select>
	</div>
	<div class="clear"></div>
</div>

<div id="art-list" >
  <% @arts.each do |art| %>
    <% unless art.photos.empty? %>
      <% categories = art.category || [] %>
      <% classes = "#{categories.map{|x| x.downcase}.join(' ')} #{art.title.downcase.split.join('-')}" %>
      <% unless art.artist.nil? %>
      	<% classes = classes + art.artist.downcase.split.join('-') %>
     	<% end %>
 			<div class="art <%= classes %>">
        <img src="<%= art.primary_photo.image :big %>"/>
        <h3><%= link_to art.title, art %></h3>
        <h4><%= known(art.artist) %></h4>
        <small class="created_at" style="display:none;"><%= art.created_at.strftime("%Y%m%d%H%M") %></small>
        <small class="visits" style="display:none;"><%= art.total_visits %></small>
      </div>
    <% end %>
  <% end %>
</div>
</div>

<%= paginate @arts %>

<script>
function setup_isotope1(){
  var $container = $('#art-list');

  $container.isotope({
    masonry: {
      layoutMode: 'fitColumns',
      columnWidth: 83
    },
    itemSelector : '.art',
    sortBy: 'created_at',
    getSortData:{
      visits: function($elem){
        return parseInt($elem.find('.visits').text());
      },
      created_at: function($elem){
        return parseInt($elem.find('.created_at').text());
      }
    }
  });
  $('#filters a').click(function(){
    var selector = $(this).attr('data-filter');
    $container.isotope({ filter: selector });
    return false;
  });
  $('#sort-by a').click(function(){
    // get href attribute, minus the '#'
    var sortName = $(this).attr('href').slice(1);
    if(sortName == 'created_at'){
      $('#art-list').isotope({ sortBy : sortName, sortAscending : false });  
    }
    else{
      $('#art-list').isotope({ sortBy : sortName });  
    }
    
    return false;
  });
  $('#art-list').isotope({ sortBy : 'created_at', sortAscending : false});
  }

  function setup_isotope(){
    var $container = $('#art-list');
    
    $container.isotope({
      itemSelector : '.art',
      sortBy: 'created_at',
      getSortData:{
        visits: function($elem){
          return parseInt($elem.find('.visits').text());
        },
        created_at: function($elem){
          return parseInt($elem.find('.created_at').text());
        }
      }
    });
    
    $container.infinitescroll({
      navSelector  : 'nav.pagination',    // selector for the paged navigation 
      nextSelector : 'nav.pagination a[rel=next]',  // selector for the NEXT link (to page 2)
      itemSelector : '.art',     // selector for all items you'll retrieve
      loading: {
          finishedMsg: 'No more pages to load.',
          img: 'http://i.imgur.com/qkKy8.gif'
        }
      },
      // call Isotope as a callback
      function( newElements ) {
        $container.isotope('insert', $(newElements)); 
      }
    );

    $('#filters a').click(function(){
      var selector = $(this).attr('data-filter');
      $container.isotope({ filter: selector });
      return false;
    });
    $('#sort-by a').click(function(){
      // get href attribute, minus the '#'
      var sortName = $(this).attr('href').slice(1);
      if(sortName == 'created_at'){
        $('#art-list').isotope({ sortBy : sortName, sortAscending : false });  
      }
      else{
        $('#art-list').isotope({ sortBy : sortName });  
      }
      return false;
    });
    $('#art-list').isotope({ sortBy : 'created_at', sortAscending : false});
  }

  $(window).load(function(){
      setup_isotope();
      //$('#art-list').isotope('destroy');
      //setup_isotope();
  });

</script>
